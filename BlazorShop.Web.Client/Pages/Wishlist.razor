@page "/wishlist"
@attribute [Authorize]

@if(products == null) {
	<LoadingScreen />
} else {
	<section class="section-content padding-y bg">
		<div class="container">
			<article class="card">
				<header class="card-header"> 我的收藏 </header>
				<div class="card-body">
					<div class="row">
						@foreach(var product in products) {
							<div class="col-md-3">
								<figure class="card card-product-grid  mb-3">
									<div class="img-wrap">
										<a href="products/@product.Id/@product.Name">
											<img src="@product.ImageSource" />
										</a>
									</div>
									<figcaption class="info-wrap">
										<a href="products/@product.Id/@product.Name" class="title text-truncate">
											@product.Name
										</a>

										<p class="price mb-2">$@product.Price</p>

										<a @onclick="() => OnSubmitAsync(product.Id)"
								   @onclick:preventDefault
								   href="#"
								   class="btn btn-primary btn-sm">
											添加到购物车
										</a>
										<a @onclick="() => OnRemoveAsync(product.Id)"
								   @onclick:preventDefault
								   href="#"
								   class="btn btn-danger btn-sm"
								   data-toggle="tooltip"
								   title="Remove from wishlist">
											<i class="fa fa-times"></i>
										</a>
									</figcaption>
								</figure>
							</div>
						}
					</div>
				</div>
			</article>
		</div>
	</section>
}

@code {
	private IEnumerable<WishlistsProductsResponseModel> products;

	protected override async Task OnInitializedAsync() => await this.LoadDataAsync();

	private async Task LoadDataAsync() => this.products = await this.WishlistsService.Mine();

	private async Task OnSubmitAsync(long id) {
		var cartRequest = new ShoppingCartRequestModel {
				ProductId = id,
				Quantity = 1
			};

		await this.ShoppingCartsService.AddProduct(cartRequest);

		this.NavigationManager.NavigateTo("/cart", forceLoad: true);
	}

	private async Task OnRemoveAsync(long id) {
		var result = await this.WishlistsService.RemoveProduct(id);

		if(result.Succeeded) {
			await this.LoadDataAsync();
		}
	}
}
