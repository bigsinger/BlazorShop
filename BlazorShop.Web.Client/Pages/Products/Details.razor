@page "/product/{Id:long}/{ProductName}"
@attribute [Authorize]

@if(product == null) {
	<LoadingScreen />
} else {
	<section class="section-content padding-y bg">
		<div class="container">
			<div class="card">
				<div class="row no-gutters">
					<aside class="col-md-6">
						<article class="gallery-wrap">
							<div class="img-big-wrap">
								<a href="@product.ImageSource" target="_blank"><img src="@product.ImageSource" /></a>
							</div>
						</article>
					</aside>
					<main class="col-md-6 border-left">
						<article class="content-body">

							<h3 class="title">@product.Name</h3>

							<div class="row">
								<div class="col-md-6">
									<div class="price-wrap">
										<span class="price h4">￥@product.Price</span>
									</div>
								</div>
								<div align="right" class="col-md-4">
									<span class="col-sm-2">类目: </span>
									<span class="col-sm-2">@product.CategoryName</span>
								</div>
							</div>

							<p>@product.Summary</p>

							<hr />

							<AddToCartForm ProductId="@product.Id" ProductName="@product.Name" ProductQuantity="@product.Quantity" />

						</article>
					</main>
				</div>
			</div>
		</div>
	</section>
}

@code {
	private ProductsDetailsResponseModel product;

	[Parameter]
	public long Id { get; set; }

	[Parameter]
	public string ProductName { get; set; }

	protected override async Task OnInitializedAsync()
		=> this.product = await this.ProductsService.DetailsAsync<ProductsDetailsResponseModel>(this.Id);
}
