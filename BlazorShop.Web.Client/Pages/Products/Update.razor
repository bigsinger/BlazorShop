@page "/product/update/{Id:long}"
@using BlazorShop.Data;
@attribute [Authorize(Roles = Constants.AdministratorRole)]

@if(categories == null || model == null) {
	<LoadingScreen />
} else {
	<h4 class="title-page text-center">更新商品</h4>
	<section class="section-content padding-y bg">
		<div class="container">
			<div class="row">
				<div class="card mx-auto">
					<article class="card-body">

						<EditForm Model="model" OnValidSubmit="SubmitAsync">

							<DataAnnotationsValidator />
							<ValidationSummary />


							<div class="form-group">
								<label>名称/标题</label>
								<InputText @bind-Value="model.Name" type="text" class="form-control" />
							</div>

							<div class="form-group">
								<label>类目</label>
								<InputSelectNumber @bind-Value="model.CategoryId" class="form-control">
									@foreach(var category in categories) {
										if(model.CategoryId == category.Id) {
											<option value="@category.Id" selected="">@category.Name</option>
										} else {
											<option value="@category.Id">@category.Name</option>
										}
									}
								</InputSelectNumber>
							</div>

							<div class="form-row">
								<div class="col form-group">
									<label>价格</label>
									<InputNumber @bind-Value="model.Price" type="number" class="form-control" />
								</div>
								<div class="col form-group">
									<label>库存数量</label>
									<InputNumber @bind-Value="model.Quantity" type="number" class="form-control" />
								</div>
							</div>

							<div class="form-group">
								<label>预览图</label>
								<InputText @bind-Value="model.ImageSource" type="url" class="form-control" />
								<img src="@model.ImageSource" style="width:100px" />
							</div>

							<div class="form-group">
								<label>摘要</label>
								<InputTextArea @bind-Value="model.Summary" rows="10" class="form-control"></InputTextArea>
							</div>

							<div class="form-group">
								<button type="submit" class="btn btn-block btn-primary">修改</button>
							</div>

						</EditForm>

					</article>
				</div>
			</div>
		</div>
	</section>
}

@code {
	private ProductsRequestModel model;
	private IEnumerable<CategoriesListingResponseModel> categories;

	[Parameter]
	public long Id { get; set; }

	protected override async Task OnInitializedAsync() {
		this.model = await this.ProductsService.DetailsAsync<ProductsRequestModel>(this.Id);
		this.categories = await this.CategoriesService.All();
	}

	private async Task SubmitAsync() {
		var result = await this.ProductsService.UpdateAsync(this.Id, this.model);

		if(result.Succeeded) {
			this.NavigationManager.NavigateTo($"/product/{this.Id}/{this.model.Name}");
		}
	}
}
