@page "/account/password"
@attribute [Authorize]

<section class="section-content padding-y bg">
	<div class="container">

		<div class="row">

			<AccountSidebar />

			<main class="col-md-9">

				<article class="card mb-3">
					<div class="card-body">

						<h4 class="card-title mb-4">修改密码</h4>
						<EditForm Model="model" OnValidSubmit="SubmitAsync">

							<ErrorsList ShowErrors="ShowErrors" Errors="Errors" />
							<DataAnnotationsValidator />
							<ValidationSummary />

							<div class="form-group row">
								<label class="col-sm-3 col-form-label">当前密码</label>
								<div class="col-sm-6">
									<InputText @bind-Value="model.Password" class="form-control" type="password" />
								</div>
							</div>
							<div class="form-group row">
								<label class="col-sm-3 col-form-label">新的密码</label>
								<div class="col-sm-6">
									<InputText @bind-Value="model.NewPassword" class="form-control" type="password" />
								</div>
							</div>
							<div class="form-group row">
								<label class="col-sm-3 col-form-label">新的密码确认</label>
								<div class="col-sm-6">
									<InputText @bind-Value="model.ConfirmNewPassword" class="form-control" type="password" />
								</div>
							</div>

							<button type="submit" class="btn btn-primary"> 修改 </button>
						</EditForm>

					</div>
				</article>

			</main>
		</div>

	</div>
</section>

@code {
	private readonly ChangePasswordRequestModel model = new();

	public bool ShowErrors { get; set; }

	public IEnumerable<string> Errors { get; set; }

	private async Task SubmitAsync() {
		var response = await this.Http.PutAsJsonAsync("api/identity/changepassword", this.model);

		if(response.IsSuccessStatusCode) {
			this.ShowErrors = false;

			this.model.Password = null;
			this.model.NewPassword = null;
			this.model.ConfirmNewPassword = null;

			await this.AuthService.Logout();

			this.ToastService.ShowSuccess("密码修改成功，请重新登录。");
			this.NavigationManager.NavigateTo("/account/login");
		} else {
			this.Errors = await response.Content.ReadFromJsonAsync<string[]>();
			this.ShowErrors = true;
		}
	}
}